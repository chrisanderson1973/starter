
C:\Users\Chris\Desktop\Development\Embedded\autostart\obj\SerialBuffer.o:     file format elf32-littlearm
C:\Users\Chris\Desktop\Development\Embedded\autostart\obj\SerialBuffer.o

Disassembly of section .text.DMA1_Channel4_IRQHandler:

00000000 <DMA1_Channel4_IRQHandler>:
DMA1_Channel4_IRQHandler():
   0:	4b05      	ldr	r3, [pc, #20]	(18 <DMA1_Channel4_IRQHandler+0x18>)
   2:	2200      	movs	r2, #0
   4:	4905      	ldr	r1, [pc, #20]	(1c <DMA1_Channel4_IRQHandler+0x1c>)
   6:	601a      	str	r2, [r3, #0]
   8:	f44f 4370 	mov.w	r3, #61440	; 0xf000
   c:	604b      	str	r3, [r1, #4]
   e:	4b04      	ldr	r3, [pc, #16]	(20 <DMA1_Channel4_IRQHandler+0x20>)
  10:	604a      	str	r2, [r1, #4]
  12:	801a      	strh	r2, [r3, #0]
  14:	4770      	bx	lr
  16:	46c0      	nop			(mov r8, r8)
  18:	40020044 	.word	0x40020044
  1c:	40020000 	.word	0x40020000
  20:	00000000 	.word	0x00000000
Disassembly of section .text.get_serial_character:

00000000 <get_serial_character>:
get_serial_character():
   0:	4b0a      	ldr	r3, [pc, #40]	(2c <get_serial_character+0x2c>)
   2:	490b      	ldr	r1, [pc, #44]	(30 <get_serial_character+0x30>)
   4:	685b      	ldr	r3, [r3, #4]
   6:	780a      	ldrb	r2, [r1, #0]
   8:	f1c3 0314 	rsb	r3, r3, #20	; 0x14
   c:	b2db      	uxtb	r3, r3
   e:	429a      	cmp	r2, r3
  10:	d101      	bne.n	16 <get_serial_character+0x16>
  12:	2000      	movs	r0, #0
  14:	e009      	b.n	2a <get_serial_character+0x2a>
  16:	4b07      	ldr	r3, [pc, #28]	(34 <get_serial_character+0x34>)
  18:	2a12      	cmp	r2, #18
  1a:	5c9b      	ldrb	r3, [r3, r2]
  1c:	7003      	strb	r3, [r0, #0]
  1e:	d801      	bhi.n	24 <get_serial_character+0x24>
  20:	1c53      	adds	r3, r2, #1
  22:	e000      	b.n	26 <get_serial_character+0x26>
  24:	2300      	movs	r3, #0
  26:	700b      	strb	r3, [r1, #0]
  28:	2001      	movs	r0, #1
  2a:	4770      	bx	lr
  2c:	40020058 	.word	0x40020058
	...
Disassembly of section .text.hex_to_ascii:

00000000 <hex_to_ascii>:
hex_to_ascii():
   0:	f000 000f 	and.w	r0, r0, #15	; 0xf
   4:	2809      	cmp	r0, #9
   6:	d801      	bhi.n	c <hex_to_ascii+0xc>
   8:	3030      	adds	r0, #48
   a:	e000      	b.n	e <hex_to_ascii+0xe>
   c:	3037      	adds	r0, #55
   e:	4770      	bx	lr
Disassembly of section .text.fill_a_byte:

00000000 <fill_a_byte>:
fill_a_byte():
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	4606      	mov	r6, r0
   6:	0900      	lsrs	r0, r0, #4
   8:	f7ff fffe 	bl	0 <fill_a_byte>
   c:	f8df 8024 	ldr.w	r8, [pc, #36]	; 34 <fill_a_byte+0x34>
  10:	4d07      	ldr	r5, [pc, #28]	(30 <fill_a_byte+0x30>)
  12:	f8b8 4000 	ldrh.w	r4, [r8]
  16:	5528      	strb	r0, [r5, r4]
  18:	4630      	mov	r0, r6
  1a:	f7ff fffe 	bl	0 <fill_a_byte>
  1e:	3401      	adds	r4, #1
  20:	b2a4      	uxth	r4, r4
  22:	5528      	strb	r0, [r5, r4]
  24:	3401      	adds	r4, #1
  26:	f8a8 4000 	strh.w	r4, [r8]
  2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  2e:	46c0      	nop			(mov r8, r8)
	...
Disassembly of section .text.fill_an_int:

00000000 <fill_an_int>:
fill_an_int():
   0:	b507      	push	{r0, r1, r2, lr}
   2:	ab02      	add	r3, sp, #8
   4:	f823 0d02 	strh.w	r0, [r3, #-2]!
   8:	7858      	ldrb	r0, [r3, #1]
   a:	f7ff fffe 	bl	0 <fill_an_int>
   e:	f89d 0006 	ldrb.w	r0, [sp, #6]
  12:	f7ff fffe 	bl	0 <fill_an_int>
  16:	bd0e      	pop	{r1, r2, r3, pc}
Disassembly of section .text.fill_a_long:

00000000 <fill_a_long>:
fill_a_long():
   0:	b507      	push	{r0, r1, r2, lr}
   2:	9001      	str	r0, [sp, #4]
   4:	0c00      	lsrs	r0, r0, #16
   6:	f7ff fffe 	bl	0 <fill_a_long>
   a:	f8bd 0004 	ldrh.w	r0, [sp, #4]
   e:	f7ff fffe 	bl	0 <fill_a_long>
  12:	bd0e      	pop	{r1, r2, r3, pc}
Disassembly of section .text.fill_a_number:

00000000 <fill_a_number>:
fill_a_number():
   0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   4:	f1b0 0800 	subs.w	r8, r0, #0	; 0x0
   8:	4689      	mov	r9, r1
   a:	da08      	bge.n	1e <fill_a_number+0x1e>
   c:	4819      	ldr	r0, [pc, #100]	(74 <fill_a_number+0x74>)
   e:	4a1a      	ldr	r2, [pc, #104]	(78 <fill_a_number+0x78>)
  10:	8803      	ldrh	r3, [r0, #0]
  12:	212d      	movs	r1, #45
  14:	54d1      	strb	r1, [r2, r3]
  16:	3301      	adds	r3, #1
  18:	8003      	strh	r3, [r0, #0]
  1a:	f1c8 0800 	rsb	r8, r8, #0	; 0x0
  1e:	4b15      	ldr	r3, [pc, #84]	(74 <fill_a_number+0x74>)
  20:	4f16      	ldr	r7, [pc, #88]	(7c <fill_a_number+0x7c>)
  22:	881d      	ldrh	r5, [r3, #0]
  24:	2100      	movs	r1, #0
  26:	2609      	movs	r6, #9
  28:	454e      	cmp	r6, r9
  2a:	d101      	bne.n	30 <fill_a_number+0x30>
  2c:	2101      	movs	r1, #1
  2e:	e008      	b.n	42 <fill_a_number+0x42>
  30:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
  34:	429e      	cmp	r6, r3
  36:	d104      	bne.n	42 <fill_a_number+0x42>
  38:	4a0f      	ldr	r2, [pc, #60]	(78 <fill_a_number+0x78>)
  3a:	232e      	movs	r3, #46
  3c:	5553      	strb	r3, [r2, r5]
  3e:	1c6b      	adds	r3, r5, #1
  40:	b29d      	uxth	r5, r3
  42:	fb98 f3f7 	sdiv	r3, r8, r7
  46:	b2dc      	uxtb	r4, r3
  48:	b904      	cbnz	r4, 4c <fill_a_number+0x4c>
  4a:	b149      	cbz	r1, 60 <fill_a_number+0x60>
  4c:	4620      	mov	r0, r4
  4e:	f7ff fffe 	bl	0 <fill_a_number>
  52:	fb07 8814 	mls	r8, r7, r4, r8
  56:	4b08      	ldr	r3, [pc, #32]	(78 <fill_a_number+0x78>)
  58:	2101      	movs	r1, #1
  5a:	5558      	strb	r0, [r3, r5]
  5c:	1c6b      	adds	r3, r5, #1
  5e:	b29d      	uxth	r5, r3
  60:	3e01      	subs	r6, #1
  62:	d303      	bcc.n	6c <fill_a_number+0x6c>
  64:	230a      	movs	r3, #10
  66:	fb97 f7f3 	sdiv	r7, r7, r3
  6a:	e7dd      	b.n	28 <fill_a_number+0x28>
  6c:	4b01      	ldr	r3, [pc, #4]	(74 <fill_a_number+0x74>)
  6e:	801d      	strh	r5, [r3, #0]
  70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...
  7c:	3b9aca00 	.word	0x3b9aca00
Disassembly of section .text.fill_a_decimal:

00000000 <fill_a_decimal>:
fill_a_decimal():
   0:	b510      	push	{r4, lr}
   2:	2100      	movs	r1, #0
   4:	f7ff fffe 	bl	0 <fill_a_decimal>
   8:	bd10      	pop	{r4, pc}
   a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.fill_a_string:

00000000 <fill_a_string>:
fill_a_string():
   0:	b510      	push	{r4, lr}
   2:	f04f 0c00 	mov.w	ip, #0	; 0x0
   6:	4604      	mov	r4, r0
   8:	e00a      	b.n	20 <fill_a_string+0x20>
   a:	4b08      	ldr	r3, [pc, #32]	(2c <fill_a_string+0x2c>)
   c:	4908      	ldr	r1, [pc, #32]	(30 <fill_a_string+0x30>)
   e:	881a      	ldrh	r2, [r3, #0]
  10:	f10c 0c01 	add.w	ip, ip, #1	; 0x1
  14:	5488      	strb	r0, [r1, r2]
  16:	3201      	adds	r2, #1
  18:	f1bc 0f3c 	cmp.w	ip, #60	; 0x3c
  1c:	801a      	strh	r2, [r3, #0]
  1e:	d003      	beq.n	28 <fill_a_string+0x28>
  20:	f814 000c 	ldrb.w	r0, [r4, ip]
  24:	2800      	cmp	r0, #0
  26:	d1f0      	bne.n	a <fill_a_string+0xa>
  28:	bd10      	pop	{r4, pc}
  2a:	46c0      	nop			(mov r8, r8)
	...
Disassembly of section .text.buffer_is_busy:

00000000 <buffer_is_busy>:
buffer_is_busy():
   0:	4b02      	ldr	r3, [pc, #8]	(c <buffer_is_busy+0xc>)
   2:	6818      	ldr	r0, [r3, #0]
   4:	f000 0001 	and.w	r0, r0, #1	; 0x1
   8:	4770      	bx	lr
   a:	46c0      	nop			(mov r8, r8)
   c:	40020044 	.word	0x40020044
Disassembly of section .text.wait_for_buffer:

00000000 <wait_for_buffer>:
wait_for_buffer():
   0:	b510      	push	{r4, lr}
   2:	f7ff fffe 	bl	0 <wait_for_buffer>
   6:	2800      	cmp	r0, #0
   8:	d1fb      	bne.n	2 <wait_for_buffer+0x2>
   a:	bd10      	pop	{r4, pc}
Disassembly of section .text.start_transmitting:

00000000 <start_transmitting>:
start_transmitting():
   0:	4b03      	ldr	r3, [pc, #12]	(10 <start_transmitting+0x10>)
   2:	4a04      	ldr	r2, [pc, #16]	(14 <start_transmitting+0x14>)
   4:	881b      	ldrh	r3, [r3, #0]
   6:	6053      	str	r3, [r2, #4]
   8:	f241 0393 	movw	r3, #4243	; 0x1093
   c:	6013      	str	r3, [r2, #0]
   e:	4770      	bx	lr
  10:	00000000 	.word	0x00000000
  14:	40020044 	.word	0x40020044
Disassembly of section .text.send_sio_buffer:

00000000 <send_sio_buffer>:
send_sio_buffer():
   0:	4b03      	ldr	r3, [pc, #12]	(10 <send_sio_buffer+0x10>)
   2:	b510      	push	{r4, lr}
   4:	881b      	ldrh	r3, [r3, #0]
   6:	b10b      	cbz	r3, c <send_sio_buffer+0xc>
   8:	f7ff fffe 	bl	0 <send_sio_buffer>
   c:	bd10      	pop	{r4, pc}
   e:	46c0      	nop			(mov r8, r8)
  10:	00000000 	.word	0x00000000
Disassembly of section .text.send_a_string:

00000000 <send_a_string>:
send_a_string():
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
   4:	f7ff fffe 	bl	0 <send_a_string>
   8:	4620      	mov	r0, r4
   a:	f7ff fffe 	bl	0 <send_a_string>
   e:	f7ff fffe 	bl	0 <send_a_string>
  12:	bd10      	pop	{r4, pc}
Disassembly of section .text.initialize_serial:

00000000 <initialize_serial>:
initialize_serial():
   0:	4a16      	ldr	r2, [pc, #88]	(5c <initialize_serial+0x5c>)
   2:	f04f 030c 	mov.w	r3, #12	; 0xc
   6:	8193      	strh	r3, [r2, #12]
   8:	b570      	push	{r4, r5, r6, lr}
   a:	f04f 03c0 	mov.w	r3, #192	; 0xc0
   e:	2400      	movs	r4, #0
  10:	8214      	strh	r4, [r2, #16]
  12:	8293      	strh	r3, [r2, #20]
  14:	f640 5305 	movw	r3, #3333	; 0xd05
  18:	8113      	strh	r3, [r2, #8]
  1a:	8993      	ldrh	r3, [r2, #12]
  1c:	4d10      	ldr	r5, [pc, #64]	(60 <initialize_serial+0x60>)
  1e:	b29b      	uxth	r3, r3
  20:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  24:	8193      	strh	r3, [r2, #12]
  26:	4a0f      	ldr	r2, [pc, #60]	(64 <initialize_serial+0x64>)
  28:	4b0f      	ldr	r3, [pc, #60]	(68 <initialize_serial+0x68>)
  2a:	6014      	str	r4, [r2, #0]
  2c:	6095      	str	r5, [r2, #8]
  2e:	60d3      	str	r3, [r2, #12]
  30:	4b0e      	ldr	r3, [pc, #56]	(6c <initialize_serial+0x6c>)
  32:	f44f 4270 	mov.w	r2, #61440	; 0xf000
  36:	605a      	str	r2, [r3, #4]
  38:	200e      	movs	r0, #14
  3a:	2110      	movs	r1, #16
  3c:	f7ff fffe 	bl	0 <enable_interrupt>
  40:	4a0b      	ldr	r2, [pc, #44]	(70 <initialize_serial+0x70>)
  42:	4b0c      	ldr	r3, [pc, #48]	(74 <initialize_serial+0x74>)
  44:	6014      	str	r4, [r2, #0]
  46:	6095      	str	r5, [r2, #8]
  48:	60d3      	str	r3, [r2, #12]
  4a:	2314      	movs	r3, #20
  4c:	6053      	str	r3, [r2, #4]
  4e:	f241 03a1 	movw	r3, #4257	; 0x10a1
  52:	6013      	str	r3, [r2, #0]
  54:	4b08      	ldr	r3, [pc, #32]	(78 <initialize_serial+0x78>)
  56:	801c      	strh	r4, [r3, #0]
  58:	bd70      	pop	{r4, r5, r6, pc}
  5a:	46c0      	nop			(mov r8, r8)
  5c:	40013800 	.word	0x40013800
  60:	40013804 	.word	0x40013804
  64:	40020044 	.word	0x40020044
  68:	00000000 	.word	0x00000000
  6c:	40020000 	.word	0x40020000
  70:	40020058 	.word	0x40020058
	...
