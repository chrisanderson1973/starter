
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart\Canbus.o:     file format elf32-littlearm
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart\Canbus.o

Disassembly of section .text.can_filter_0_action:

00000000 <can_filter_0_action>:
can_filter_0_action():
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:228
 *  page
 *-------------------------------------------------------------*/

void can_filter_0_action(CAN_FIFOMailBox_TypeDef *mailbox)
{
	switch ( (u8)(mailbox->RIR >> 11) )
   0:	6803      	ldr	r3, [r0, #0]
   2:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   6:	b2db      	uxtb	r3, r3
   8:	2be5      	cmp	r3, #229
   a:	d109      	bne.n	20 <can_filter_0_action+0x20>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:233
	{
 		case PS_HOURS:			// 0xFEE5
			// Engine hours is delivered as 0.05 hours/bit
			//  and stored as 0.1 hr/bit
			engine_hours = (mailbox->RDLR + 1) >> 1;
   c:	6883      	ldr	r3, [r0, #8]
   e:	f240 0200 	movw	r2, #0	; 0x0
  12:	f2c0 0200 	movt	r2, #0	; 0x0
  16:	f103 0301 	add.w	r3, r3, #1	; 0x1
  1a:	ea4f 0353 	mov.w	r3, r3, lsr #1
  1e:	6013      	str	r3, [r2, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:265
//			oil pressure = (mailbox->RDLR & 0xFF000000) >> 18;
//			fuel pressure = (mailbox->RDLR & 0x00FF) * 4;

			break;
	}
}
  20:	4770      	bx	lr
  22:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.maintain_can_comm_wd:

00000000 <maintain_can_comm_wd>:
maintain_can_comm_wd():
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:607
 *--------------------------------------------------------------------*/
 
void maintain_can_comm_wd(void)
{
	// Timeout a message if it does not complete in 1/2 second
	if (can_comm_watchdog < 50)
   0:	f240 0300 	movw	r3, #0	; 0x0
   4:	f2c0 0300 	movt	r3, #0	; 0x0
   8:	781a      	ldrb	r2, [r3, #0]
   a:	2a31      	cmp	r2, #49
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:608
		can_comm_watchdog++;
   c:	bf9f      	itttt	ls
   e:	f240 0300 	movwls	r3, #0	; 0x0
  12:	f2c0 0300 	movtls	r3, #0	; 0x0
  16:	3201      	addls	r2, #1
  18:	701a      	strbls	r2, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:614
	else
	{
		// We seem to be stuck
		// Kill a possible in-process and free up canMsgBuffer[]

		can_buffer_state = BUFFER_IDLE;
  1a:	bf81      	itttt	hi
  1c:	f240 0300 	movwhi	r3, #0	; 0x0
  20:	f2c0 0300 	movthi	r3, #0	; 0x0
  24:	2200      	movhi	r2, #0
  26:	701a      	strbhi	r2, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:619
	}

	// Count time since the last reception from the 
	//  engine ECU
	if (ECU_comm_watchdog)
  28:	f240 0300 	movw	r3, #0	; 0x0
  2c:	f2c0 0300 	movt	r3, #0	; 0x0
  30:	781a      	ldrb	r2, [r3, #0]
  32:	b172      	cbz	r2, 52 <maintain_can_comm_wd+0x52>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:621
	{
		ECU_comm_watchdog--;
  34:	f240 0300 	movw	r3, #0	; 0x0
  38:	f2c0 0300 	movt	r3, #0	; 0x0
  3c:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
  40:	701a      	strb	r2, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:622
		middle_yellow_led = LED_NEG_BLINK;
  42:	f240 0300 	movw	r3, #0	; 0x0
  46:	f2c0 0300 	movt	r3, #0	; 0x0
  4a:	f04f 0203 	mov.w	r2, #3	; 0x3
  4e:	701a      	strb	r2, [r3, #0]
  50:	e006      	b.n	60 <maintain_can_comm_wd+0x60>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:625
	}
	else
		middle_yellow_led = LED_OFF;
  52:	f240 0300 	movw	r3, #0	; 0x0
  56:	f2c0 0300 	movt	r3, #0	; 0x0
  5a:	f04f 0200 	mov.w	r2, #0	; 0x0
  5e:	701a      	strb	r2, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:627

	if(dm1_timout_count)
  60:	f240 0300 	movw	r3, #0	; 0x0
  64:	f2c0 0300 	movt	r3, #0	; 0x0
  68:	881a      	ldrh	r2, [r3, #0]
  6a:	b132      	cbz	r2, 7a <maintain_can_comm_wd+0x7a>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:628
		dm1_timout_count--;
  6c:	f240 0300 	movw	r3, #0	; 0x0
  70:	f2c0 0300 	movt	r3, #0	; 0x0
  74:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
  78:	801a      	strh	r2, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:634
	else
	{
		// Dm1 messages have ceased so there is no longer an active fault
		//clear_engine_faults();
	}
}
  7a:	4770      	bx	lr
Disassembly of section .text.access_info_screens:

00000000 <access_info_screens>:
access_info_screens():
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:488
 *  may take multiple passes to transmit since they all do not fit in 
 *  sio_buffer[] at once.
 *---------------------------------------------------------------------*/

void access_info_screens(void)
{
   0:	b510      	push	{r4, lr}
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:491
	static u8 pass_count = 0;

	switch (remote_access_state)
   2:	f240 0300 	movw	r3, #0	; 0x0
   6:	f2c0 0300 	movt	r3, #0	; 0x0
   a:	789b      	ldrb	r3, [r3, #2]
   c:	2b05      	cmp	r3, #5
   e:	f200 808c 	bhi.w	12a <access_info_screens+0x12a>
  12:	e8df f003 	tbb	[pc, r3]
  16:	0803      	.short	0x0803
  18:	81452f19 	.word	0x81452f19
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:499

			/*--------------------------------------------------------------
			 * Check to see if it is time to send another screen and send it
			 *-------------------------------------------------------------*/

			access_novram_log();
  1c:	f7ff fffe 	bl	0 <access_novram_log>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:501

			access_fault_log();
  20:	f7ff fffe 	bl	0 <access_fault_log>
  24:	e081      	b.n	12a <access_info_screens+0x12a>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:511

			// We have started the remote screen access state machine

			// Ask our CAN controllers for the number of other ? 
			//  screens to display
			transmit_proprietary(PCMD_PING, CAN_ALL_ADDR);
  26:	f04f 0002 	mov.w	r0, #2	; 0x2
  2a:	f04f 01ff 	mov.w	r1, #255	; 0xff
  2e:	f7ff fffe 	bl	0 <transmit_proprietary>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:514

			// .. and wait for their response
			remote_access_state = ACCESS_WAITING;
  32:	f240 0300 	movw	r3, #0	; 0x0
  36:	f2c0 0300 	movt	r3, #0	; 0x0
  3a:	f04f 0202 	mov.w	r2, #2	; 0x2
  3e:	709a      	strb	r2, [r3, #2]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:516

			pass_count = 30;
  40:	f102 021c 	add.w	r2, r2, #28	; 0x1c
  44:	70da      	strb	r2, [r3, #3]
  46:	e070      	b.n	12a <access_info_screens+0x12a>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:522

			break;

		case ACCESS_WAITING:

			if (pass_count)
  48:	f240 0300 	movw	r3, #0	; 0x0
  4c:	f2c0 0300 	movt	r3, #0	; 0x0
  50:	78da      	ldrb	r2, [r3, #3]
  52:	b13a      	cbz	r2, 64 <access_info_screens+0x64>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:523
				pass_count--;
  54:	f240 0300 	movw	r3, #0	; 0x0
  58:	f2c0 0300 	movt	r3, #0	; 0x0
  5c:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
  60:	70da      	strb	r2, [r3, #3]
  62:	e062      	b.n	12a <access_info_screens+0x12a>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:529
			else
			{
				// We have had enough time to get PING responses from all 
				//  controllers that may have a remote screen to dump

				remote_access_state = ACCESS_NEXT;
  64:	f240 0300 	movw	r3, #0	; 0x0
  68:	f2c0 0300 	movt	r3, #0	; 0x0
  6c:	f04f 0204 	mov.w	r2, #4	; 0x4
  70:	709a      	strb	r2, [r3, #2]
  72:	e05a      	b.n	12a <access_info_screens+0x12a>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:536

			break;

		case ACCESS_RECEIVING:

			if ( (u8)(system_timer - display_data_time) > (SECONDS(1) / 4) )
  74:	f240 0300 	movw	r3, #0	; 0x0
  78:	f2c0 0300 	movt	r3, #0	; 0x0
  7c:	681a      	ldr	r2, [r3, #0]
  7e:	f240 0300 	movw	r3, #0	; 0x0
  82:	f2c0 0300 	movt	r3, #0	; 0x0
  86:	781b      	ldrb	r3, [r3, #0]
  88:	ebc3 0202 	rsb	r2, r3, r2
  8c:	b2d2      	uxtb	r2, r2
  8e:	2a19      	cmp	r2, #25
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:541
			{
				// We haven't heard from the remote sender for a while
				// Move on the the next screen

				remote_access_state = ACCESS_NEXT;
  90:	bf81      	itttt	hi
  92:	f240 0300 	movwhi	r3, #0	; 0x0
  96:	f2c0 0300 	movthi	r3, #0	; 0x0
  9a:	2204      	movhi	r2, #4
  9c:	709a      	strbhi	r2, [r3, #2]
  9e:	e044      	b.n	12a <access_info_screens+0x12a>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:548

			break;

		case ACCESS_NEXT:
 
			if (remote_list_index)
  a0:	f240 0300 	movw	r3, #0	; 0x0
  a4:	f2c0 0300 	movt	r3, #0	; 0x0
  a8:	889a      	ldrh	r2, [r3, #4]
  aa:	b30a      	cbz	r2, f0 <access_info_screens+0xf0>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:550
			{
				if ( transmit_proprietary(PCMD_QUESTION_SCREEN,
  ac:	f240 0300 	movw	r3, #0	; 0x0
  b0:	f2c0 0300 	movt	r3, #0	; 0x0
  b4:	4413      	add	r3, r2
  b6:	f04f 0040 	mov.w	r0, #64	; 0x40
  ba:	f813 1c01 	ldrb.w	r1, [r3, #-1]
  be:	f7ff fffe 	bl	0 <transmit_proprietary>
  c2:	b390      	cbz	r0, 68 <access_info_screens+0x68>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:553
									remote_lists[remote_list_index - 1]) )
				{
					remote_list_index--;
  c4:	f240 0200 	movw	r2, #0	; 0x0
  c8:	f2c0 0200 	movt	r2, #0	; 0x0
  cc:	8893      	ldrh	r3, [r2, #4]
  ce:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
  d2:	8093      	strh	r3, [r2, #4]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:554
					display_data_time = system_timer;
  d4:	f240 0300 	movw	r3, #0	; 0x0
  d8:	f2c0 0300 	movt	r3, #0	; 0x0
  dc:	6819      	ldr	r1, [r3, #0]
  de:	f240 0300 	movw	r3, #0	; 0x0
  e2:	f2c0 0300 	movt	r3, #0	; 0x0
  e6:	7019      	strb	r1, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:555
					remote_access_state = ACCESS_RECEIVING;
  e8:	f04f 0303 	mov.w	r3, #3	; 0x3
  ec:	7093      	strb	r3, [r2, #2]
  ee:	e01c      	b.n	12a <access_info_screens+0x12a>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:564
			{
				// We have accessed all remote screens
				// Start ours when the serial buffer is free

				// Do nothing until the previous transmit completes
				if ( (DMA1_Channel4->CCR & 1) == 0 )
  f0:	f240 0344 	movw	r3, #68	; 0x44
  f4:	f2c4 0302 	movt	r3, #16386	; 0x4002
  f8:	681b      	ldr	r3, [r3, #0]
  fa:	f013 0f01 	tst.w	r3, #1	; 0x1
  fe:	d114      	bne.n	2c <fill_terminal_info+0x2c>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:567
				{
					// Put operational screen in sio_buffer
					fill_terminal_info();
 100:	f7ff fffe 	bl	0 <fill_terminal_info>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:570

					// Start DMA writing it out the serial port
					send_sio_buffer();
 104:	f7ff fffe 	bl	0 <send_sio_buffer>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:572

					remote_access_state = ACCESS_IDLE;
 108:	f240 0300 	movw	r3, #0	; 0x0
 10c:	f2c0 0300 	movt	r3, #0	; 0x0
 110:	f04f 0200 	mov.w	r2, #0	; 0x0
 114:	709a      	strb	r2, [r3, #2]
 116:	e008      	b.n	12a <access_info_screens+0x12a>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:584

			// We are either module sending data via CAN 
			//  to another module to transfer to its RS232

			// Move the next seven characters
			transmit_proprietary(PCMD_RS232_DATA, dump_to_address);
 118:	f240 0300 	movw	r3, #0	; 0x0
 11c:	f2c0 0300 	movt	r3, #0	; 0x0
 120:	f04f 0041 	mov.w	r0, #65	; 0x41
 124:	7819      	ldrb	r1, [r3, #0]
 126:	f7ff fffe 	bl	0 <transmit_proprietary>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:588

			break;
	}
}
 12a:	bd10      	pop	{r4, pc}
Disassembly of section .text.can_message_action:

00000000 <can_message_action>:
can_message_action():
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:284
 *  and return TRUE.  The transmission is handled by the foreground.
 * Return FALSE if no response is desired.
 *---------------------------------------------------------------------*/

bool can_message_action(void)
{
   0:	b510      	push	{r4, lr}
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:285
	switch (canMsgBuffer[BUFF_FORMAT])
   2:	f240 0300 	movw	r3, #0	; 0x0
   6:	f2c0 0300 	movt	r3, #0	; 0x0
   a:	78db      	ldrb	r3, [r3, #3]
   c:	2bef      	cmp	r3, #239
   e:	d003      	beq.n	18 <can_message_action+0x18>
  10:	2bfe      	cmp	r3, #254
  12:	f040 8128 	bne.w	266 <can_message_action+0x266>
  16:	e112      	b.n	228 <canMsgBuffer+0x228>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:294
			/*--------------------------------
			 * The received packet is a 
			 *  Proprietary A message (0xEFxx)
			 *-------------------------------*/

			switch (canMsgBuffer[BUFF_COMMAND])
  18:	f240 0300 	movw	r3, #0	; 0x0
  1c:	f2c0 0300 	movt	r3, #0	; 0x0
  20:	789b      	ldrb	r3, [r3, #2]
  22:	2b1d      	cmp	r3, #29
  24:	d07c      	beq.n	120 <can_message_action+0x120>
  26:	d805      	bhi.n	34 <can_message_action+0x34>
  28:	2b02      	cmp	r3, #2
  2a:	d00d      	beq.n	48 <can_message_action+0x48>
  2c:	2b0f      	cmp	r3, #15
  2e:	f040 811a 	bne.w	266 <can_message_action+0x266>
  32:	e063      	b.n	fc <can_message_action+0xfc>
  34:	2b40      	cmp	r3, #64
  36:	f000 808f 	beq.w	158 <can_message_action+0x158>
  3a:	2b41      	cmp	r3, #65
  3c:	f000 80b8 	beq.w	1b0 <can_message_action+0x1b0>
  40:	2b23      	cmp	r3, #35
  42:	f040 8110 	bne.w	266 <can_message_action+0x266>
  46:	e02c      	b.n	5c <canMsgBuffer+0x5c>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:298
			{
				case PCMD_PING:

					if (canMsgBuffer[BUFF_DATA_BEGIN] == MSG_REQUEST)
  48:	f240 0300 	movw	r3, #0	; 0x0
  4c:	f2c0 0300 	movt	r3, #0	; 0x0
  50:	795b      	ldrb	r3, [r3, #5]
  52:	2b0a      	cmp	r3, #10
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:305
						// We just got a PING request
						// Send the response PING back to the sender
						// The PDU format byte, destination address and 
						//  proprietary command are already in canMsgBuffer[]

						canMsgBuffer[BUFF_DATA_BEGIN] = MSG_RESPONSE;
  54:	bf01      	itttt	eq
  56:	f240 0300 	movweq	r3, #0	; 0x0
  5a:	f2c0 0300 	movteq	r3, #0	; 0x0
  5e:	2250      	moveq	r2, #80
  60:	715a      	strbeq	r2, [r3, #5]
  62:	bf08      	it	eq
  64:	2001      	moveq	r0, #1
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:298

			switch (canMsgBuffer[BUFF_COMMAND])
			{
				case PCMD_PING:

					if (canMsgBuffer[BUFF_DATA_BEGIN] == MSG_REQUEST)
  66:	f000 8100 	beq.w	26a <can_message_action+0x26a>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:315
					{
						// We just received the response to our request for 
						//  the number of other controllers that have ? screens

						// Add it to the array of device addresses if it fits
						if ( remote_list_index < (MAXIMUM_REMOTE_LISTS - 1) )
  6a:	f240 0300 	movw	r3, #0	; 0x0
  6e:	f2c0 0300 	movt	r3, #0	; 0x0
  72:	8899      	ldrh	r1, [r3, #4]
  74:	2903      	cmp	r1, #3
  76:	f200 80f6 	bhi.w	266 <can_message_action+0x266>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:317
						{
							remote_lists[remote_list_index] = canMsgBuffer[BUFF_ADDRESS];
  7a:	f240 0200 	movw	r2, #0	; 0x0
  7e:	f2c0 0200 	movt	r2, #0	; 0x0
  82:	f240 0300 	movw	r3, #0	; 0x0
  86:	f2c0 0300 	movt	r3, #0	; 0x0
  8a:	781b      	ldrb	r3, [r3, #0]
  8c:	5453      	strb	r3, [r2, r1]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:318
							remote_list_index++;
  8e:	f240 0300 	movw	r3, #0	; 0x0
  92:	f2c0 0300 	movt	r3, #0	; 0x0
  96:	f101 0201 	add.w	r2, r1, #1	; 0x1
  9a:	809a      	strh	r2, [r3, #4]
  9c:	f04f 0000 	mov.w	r0, #0	; 0x0
  a0:	e0e3      	b.n	1ca <canMsgBuffer+0x1ca>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:332
				case PCMD_REPROGRAM:

					// A CAN device has requested to reprogram us

					// Verify the data is correct to provide some security
					if ( (canMsgBuffer[BUFF_DATA_BEGIN] == 0xA5) 
  a2:	f240 0300 	movw	r3, #0	; 0x0
  a6:	f2c0 0300 	movt	r3, #0	; 0x0
  aa:	795b      	ldrb	r3, [r3, #5]
  ac:	2ba5      	cmp	r3, #165
  ae:	f040 80da 	bne.w	266 <can_message_action+0x266>
  b2:	f240 0300 	movw	r3, #0	; 0x0
  b6:	f2c0 0300 	movt	r3, #0	; 0x0
  ba:	799b      	ldrb	r3, [r3, #6]
  bc:	2b5a      	cmp	r3, #90
  be:	f040 80d2 	bne.w	266 <can_message_action+0x266>
  c2:	f240 0300 	movw	r3, #0	; 0x0
  c6:	f2c0 0300 	movt	r3, #0	; 0x0
  ca:	785b      	ldrb	r3, [r3, #1]
  cc:	2b02      	cmp	r3, #2
  ce:	f040 80ca 	bne.w	266 <can_message_action+0x266>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:342

						// Change the "program valid" byte to something 
						//  other than valid
						// Put the source ID (Programming Master) and our can 
						//  address in the user option bytes for the BootLoader
						set_option_bytes( ((u16)canMsgBuffer[BUFF_ADDRESS] << 8)
  d2:	f240 0300 	movw	r3, #0	; 0x0
  d6:	f2c0 0300 	movt	r3, #0	; 0x0
  da:	781a      	ldrb	r2, [r3, #0]
  dc:	f240 0300 	movw	r3, #0	; 0x0
  e0:	f2c0 0300 	movt	r3, #0	; 0x0
  e4:	7818      	ldrb	r0, [r3, #0]
  e6:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
  ea:	f7ff fffe 	bl	0 <set_option_bytes>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:344
												| this_can_address );
						write_novram();
  ee:	f7ff fffe 	bl	0 <write_novram>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:347

						// Reset to get the BootLoader going
						software_reset();
  f2:	f7ff fffe 	bl	0 <software_reset>
  f6:	f04f 0000 	mov.w	r0, #0	; 0x0
  fa:	e0b6      	b.n	170 <programming_server+0x170>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:355
					break;

				case PCMD_HEARTBEAT:

					// While programming via CAN, receipt of HEARTBEAT signals success
					if (programming_server.state == PRGM_WAIT_ACK)
  fc:	f240 0300 	movw	r3, #0	; 0x0
 100:	f2c0 0300 	movt	r3, #0	; 0x0
 104:	789b      	ldrb	r3, [r3, #2]
 106:	2b06      	cmp	r3, #6
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:356
						programming_server.state = PRGM_SUCCESS;
 108:	bf01      	itttt	eq
 10a:	f240 0300 	movweq	r3, #0	; 0x0
 10e:	f2c0 0300 	movteq	r3, #0	; 0x0
 112:	2207      	moveq	r2, #7
 114:	709a      	strbeq	r2, [r3, #2]
 116:	bf08      	it	eq
 118:	2000      	moveq	r0, #0
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:355
					break;

				case PCMD_HEARTBEAT:

					// While programming via CAN, receipt of HEARTBEAT signals success
					if (programming_server.state == PRGM_WAIT_ACK)
 11a:	f040 80a4 	bne.w	266 <can_message_action+0x266>
 11e:	e0a4      	b.n	14c <canMsgBuffer+0x14c>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:364

				case PCMD_RESET_NOVRAM:

					// We could be either controller

					if (canMsgBuffer[BUFF_DATA_BEGIN] == MSG_REQUEST)
 120:	f240 0300 	movw	r3, #0	; 0x0
 124:	f2c0 0300 	movt	r3, #0	; 0x0
 128:	795b      	ldrb	r3, [r3, #5]
 12a:	2b0a      	cmp	r3, #10
 12c:	d10b      	bne.n	146 <can_message_action+0x146>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:369
					{
						// Another controller is asking us to reset our NOVRAM 
						// Do it and return a response

						initialize_novram();
 12e:	f7ff fffe 	bl	0 <initialize_novram>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:371

						canMsgBuffer[BUFF_DATA_BEGIN] = MSG_RESPONSE;
 132:	f240 0300 	movw	r3, #0	; 0x0
 136:	f2c0 0300 	movt	r3, #0	; 0x0
 13a:	f04f 0250 	mov.w	r2, #80	; 0x50
 13e:	715a      	strb	r2, [r3, #5]
 140:	f04f 0001 	mov.w	r0, #1	; 0x1
 144:	e091      	b.n	126 <can_message_action+0x126>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:381
					else
					{
						// The other controller is responding after 
						//  initializing it's NOVRAM

						send_a_string("Remote NOVRAM initialized\n\r");
 146:	f240 0000 	movw	r0, #0	; 0x0
 14a:	f2c0 0000 	movt	r0, #0	; 0x0
 14e:	f7ff fffe 	bl	0 <send_a_string>
 152:	f04f 0000 	mov.w	r0, #0	; 0x0
 156:	e088      	b.n	114 <canMsgBuffer+0x114>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:390

				case PCMD_QUESTION_SCREEN:

					// We could be either controller

					if (canMsgBuffer[BUFF_DATA_BEGIN] == MSG_REQUEST)
 158:	f240 0300 	movw	r3, #0	; 0x0
 15c:	f2c0 0300 	movt	r3, #0	; 0x0
 160:	795b      	ldrb	r3, [r3, #5]
 162:	2b0a      	cmp	r3, #10
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:411
						remote_dump_index = 0;
					}
					else
					{
						// The other controller is ending it's data dump
						remote_access_state = ACCESS_NEXT;
 164:	bf1f      	itttt	ne
 166:	f240 0300 	movwne	r3, #0	; 0x0
 16a:	f2c0 0300 	movtne	r3, #0	; 0x0
 16e:	2204      	movne	r2, #4
 170:	709a      	strbne	r2, [r3, #2]
 172:	bf18      	it	ne
 174:	2000      	movne	r0, #0
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:390

				case PCMD_QUESTION_SCREEN:

					// We could be either controller

					if (canMsgBuffer[BUFF_DATA_BEGIN] == MSG_REQUEST)
 176:	d178      	bne.n	26a <can_message_action+0x26a>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:396
					{
						// Another controller is asking us to send
						//  our '?' screen across CAN for display

						// Keep the address of the requester
						dump_to_address = canMsgBuffer[BUFF_ADDRESS];
 178:	f240 0200 	movw	r2, #0	; 0x0
 17c:	f2c0 0200 	movt	r2, #0	; 0x0
 180:	f240 0300 	movw	r3, #0	; 0x0
 184:	f2c0 0300 	movt	r3, #0	; 0x0
 188:	781b      	ldrb	r3, [r3, #0]
 18a:	7013      	strb	r3, [r2, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:400

						// Put the data into the RS232 transmit buffer 
						//  then send it via CAN to this sender
						fill_terminal_info();
 18c:	f7ff fffe 	bl	0 <fill_terminal_info>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:403

						// Start sending CAN packets
						remote_access_state = ACCESS_TRANSMIT;
 190:	f240 0300 	movw	r3, #0	; 0x0
 194:	f2c0 0300 	movt	r3, #0	; 0x0
 198:	f04f 0205 	mov.w	r2, #5	; 0x5
 19c:	709a      	strb	r2, [r3, #2]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:406

						// .. from sio_buffer[] beginning at 0
						remote_dump_index = 0;
 19e:	f240 0300 	movw	r3, #0	; 0x0
 1a2:	f2c0 0300 	movt	r3, #0	; 0x0
 1a6:	f1a2 0205 	sub.w	r2, r2, #5	; 0x5
 1aa:	801a      	strh	r2, [r3, #0]
 1ac:	4610      	mov	r0, r2
 1ae:	e05c      	b.n	26a <can_message_action+0x26a>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:421
				case PCMD_RS232_DATA:

					// We just received data from another CAN device 
					//  to be transferred to RS232

					can_buffer_index = BUFF_DATA_BEGIN;
 1b0:	f240 0300 	movw	r3, #0	; 0x0
 1b4:	f2c0 0300 	movt	r3, #0	; 0x0
 1b8:	f04f 0205 	mov.w	r2, #5	; 0x5
 1bc:	701a      	strb	r2, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:423

					for(sio_index = 0; sio_index < canMsgBuffer[BUFF_LENGTH]; sio_index++)
 1be:	f240 0300 	movw	r3, #0	; 0x0
 1c2:	f2c0 0300 	movt	r3, #0	; 0x0
 1c6:	f04f 0200 	mov.w	r2, #0	; 0x0
 1ca:	801a      	strh	r2, [r3, #0]
 1cc:	f240 0300 	movw	r3, #0	; 0x0
 1d0:	f2c0 0300 	movt	r3, #0	; 0x0
 1d4:	785a      	ldrb	r2, [r3, #1]
 1d6:	b31a      	cbz	r2, 220 <can_message_action+0x220>
 1d8:	f04f 0100 	mov.w	r1, #0	; 0x0
 1dc:	f04f 0005 	mov.w	r0, #5	; 0x5
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:424
						sio_buffer[sio_index] = canMsgBuffer[can_buffer_index++];
 1e0:	f240 0c00 	movw	ip, #0	; 0x0
 1e4:	f2c0 0c00 	movt	ip, #0	; 0x0
 1e8:	f240 0e00 	movw	lr, #0	; 0x0
 1ec:	f2c0 0e00 	movt	lr, #0	; 0x0
 1f0:	f81e 3000 	ldrb.w	r3, [lr, r0]
 1f4:	f80c 3001 	strb.w	r3, [ip, r1]
 1f8:	f101 0101 	add.w	r1, r1, #1	; 0x1
 1fc:	f100 0301 	add.w	r3, r0, #1	; 0x1
 200:	b2d8      	uxtb	r0, r3
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:423
					// We just received data from another CAN device 
					//  to be transferred to RS232

					can_buffer_index = BUFF_DATA_BEGIN;

					for(sio_index = 0; sio_index < canMsgBuffer[BUFF_LENGTH]; sio_index++)
 202:	b28b      	uxth	r3, r1
 204:	429a      	cmp	r2, r3
 206:	d8f3      	bhi.n	1f0 <can_message_action+0x1f0>
 208:	f240 0300 	movw	r3, #0	; 0x0
 20c:	f2c0 0300 	movt	r3, #0	; 0x0
 210:	801a      	strh	r2, [r3, #0]
 212:	f240 0300 	movw	r3, #0	; 0x0
 216:	f2c0 0300 	movt	r3, #0	; 0x0
 21a:	f102 0205 	add.w	r2, r2, #5	; 0x5
 21e:	701a      	strb	r2, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:426
						sio_buffer[sio_index] = canMsgBuffer[can_buffer_index++];

					start_transmitting();
 220:	f7ff fffe 	bl	0 <start_transmitting>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:428

					display_data_time = system_timer;
 224:	f240 0300 	movw	r3, #0	; 0x0
 228:	f2c0 0300 	movt	r3, #0	; 0x0
 22c:	681a      	ldr	r2, [r3, #0]
 22e:	f240 0300 	movw	r3, #0	; 0x0
 232:	f2c0 0300 	movt	r3, #0	; 0x0
 236:	701a      	strb	r2, [r3, #0]
 238:	f04f 0000 	mov.w	r0, #0	; 0x0
 23c:	e015      	b.n	2e <canMsgBuffer+0x2e>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:437

			break;

		case PF_PDU:

			switch (canMsgBuffer[BUFF_COMMAND])
 23e:	f240 0300 	movw	r3, #0	; 0x0
 242:	f2c0 0300 	movt	r3, #0	; 0x0
 246:	789b      	ldrb	r3, [r3, #2]
 248:	2bca      	cmp	r3, #202
 24a:	d002      	beq.n	252 <can_message_action+0x252>
 24c:	2beb      	cmp	r3, #235
 24e:	d10a      	bne.n	266 <can_message_action+0x266>
 250:	e004      	b.n	25c <can_message_action+0x25c>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:444
				case PS_DM1:

					// We have just received an error message from the engine

					// Receive DM1 messages, PDU = 0xFECA
					dm1_message_action();
 252:	f7ff fffe 	bl	0 <dm1_message_action>
 256:	f04f 0000 	mov.w	r0, #0	; 0x0
 25a:	e006      	b.n	10 <get_engine_serial_number+0x10>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:455
					// We have just received a response to our request 
					//  for serial number from the engine ECM

					// Extract the serial number
					// Update the list of engines connected to
					get_engine_serial_number();
 25c:	f7ff fffe 	bl	0 <get_engine_serial_number>
 260:	f04f 0000 	mov.w	r0, #0	; 0x0
 264:	e001      	b.n	26a <get_engine_serial_number+0x26a>
 266:	f04f 0000 	mov.w	r0, #0	; 0x0
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:467

			break;
	}

	return FALSE;
}
 26a:	bd10      	pop	{r4, pc}
Disassembly of section .text.check_can:

00000000 <check_can>:
check_can():
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:650
 * Check to see if a message is ready and if so, parse it and prepare any 
 *  response
 *----------------------------------------------------------------------*/
 
void check_can(void)
{
   0:	b510      	push	{r4, lr}
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:655
	static u8 indicator_delay;

	// CAN Error Status Register
	// Check the bus off flag
	if (CAN1->ESR & 0x04)
   2:	f246 4300 	movw	r3, #25600	; 0x6400
   6:	f2c4 0300 	movt	r3, #16384	; 0x4000
   a:	699b      	ldr	r3, [r3, #24]
   c:	f013 0f04 	tst.w	r3, #4	; 0x4
  10:	d019      	beq.n	36 <system_timer+0x36>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:657
	{
		indicator_delay = system_timer + 100;
  12:	f240 0300 	movw	r3, #0	; 0x0
  16:	f2c0 0300 	movt	r3, #0	; 0x0
  1a:	681a      	ldr	r2, [r3, #0]
  1c:	f240 0300 	movw	r3, #0	; 0x0
  20:	f2c0 0300 	movt	r3, #0	; 0x0
  24:	f102 0264 	add.w	r2, r2, #100	; 0x64
  28:	719a      	strb	r2, [r3, #6]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:659

		send_a_string("\n\r CAN error! ");
  2a:	f240 0000 	movw	r0, #0	; 0x0
  2e:	f2c0 0000 	movt	r0, #0	; 0x0
  32:	f7ff fffe 	bl	0 <send_a_string>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:661

		can_on_line = FALSE;
  36:	f240 0300 	movw	r3, #0	; 0x0
  3a:	f2c0 0300 	movt	r3, #0	; 0x0
  3e:	f04f 0200 	mov.w	r2, #0	; 0x0
  42:	701a      	strb	r2, [r3, #0]
  44:	e012      	b.n	6c <check_can+0x6c>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:666
	}

	// We delay a little after can_on_line is FALSE before allowing 
	//  it to be TRUE because an unterminated line is erratic
	else if ( (u8)system_timer == indicator_delay )
  46:	f240 0300 	movw	r3, #0	; 0x0
  4a:	f2c0 0300 	movt	r3, #0	; 0x0
  4e:	681a      	ldr	r2, [r3, #0]
  50:	f240 0300 	movw	r3, #0	; 0x0
  54:	f2c0 0300 	movt	r3, #0	; 0x0
  58:	799b      	ldrb	r3, [r3, #6]
  5a:	b2d2      	uxtb	r2, r2
  5c:	4293      	cmp	r3, r2
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:667
		can_on_line = TRUE;	
  5e:	bf01      	itttt	eq
  60:	f240 0300 	movweq	r3, #0	; 0x0
  64:	f2c0 0300 	movteq	r3, #0	; 0x0
  68:	2201      	moveq	r2, #1
  6a:	701a      	strbeq	r2, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:669

	switch (can_buffer_state)
  6c:	f240 0300 	movw	r3, #0	; 0x0
  70:	f2c0 0300 	movt	r3, #0	; 0x0
  74:	781b      	ldrb	r3, [r3, #0]
  76:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
  7a:	2b05      	cmp	r3, #5
  7c:	d860      	bhi.n	140 <check_can+0x140>
  7e:	e8df f003 	tbb	[pc, r3]
  82:	5f03      	.short	0x5f03
  84:	3f3c2216 	.word	0x3f3c2216
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:675
	{
		case BUFFER_SEND_CTS:

			// Send a CTS packet to the sender of a multiple packet 
			//  message to prompt it to transmit another one to us
			if ( continue_mp_input() )
  88:	f7ff fffe 	bl	0 <continue_mp_input>
  8c:	2800      	cmp	r0, #0
  8e:	d057      	beq.n	140 <check_can+0x140>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:678
			{
				// Reset the communication watchdog timer
				can_comm_watchdog = 0;
  90:	f240 0300 	movw	r3, #0	; 0x0
  94:	f2c0 0300 	movt	r3, #0	; 0x0
  98:	f04f 0200 	mov.w	r2, #0	; 0x0
  9c:	701a      	strb	r2, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:680

				can_buffer_state = BUFFER_ACQUIRING;
  9e:	f240 0300 	movw	r3, #0	; 0x0
  a2:	f2c0 0300 	movt	r3, #0	; 0x0
  a6:	f102 0202 	add.w	r2, r2, #2	; 0x2
  aa:	701a      	strb	r2, [r3, #0]
  ac:	e048      	b.n	140 <check_can+0x140>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:689

		case BUFFER_SEND_ACK:

			// Send the End of Message Acknowledgement to the sender 
			//  of the multiple packet message we have just received
			if ( end_mp_input() )
  ae:	f7ff fffe 	bl	0 <end_mp_input>
  b2:	2800      	cmp	r0, #0
  b4:	d044      	beq.n	140 <check_can+0x140>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:690
				can_buffer_state = BUFFER_READY_TO_READ;
  b6:	f240 0300 	movw	r3, #0	; 0x0
  ba:	f2c0 0300 	movt	r3, #0	; 0x0
  be:	f04f 0204 	mov.w	r2, #4	; 0x4
  c2:	701a      	strb	r2, [r3, #0]
  c4:	e03c      	b.n	140 <check_can+0x140>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:697
			break;
			
		case BUFFER_READY_TO_READ:

			// Parse the message in canMsgBuffer[]
			if ( can_message_action() )
  c6:	f7ff fffe 	bl	0 <check_can>
  ca:	b170      	cbz	r0, 20 <canMsgBuffer+0x20>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:699
			{
				canMsgBuffer[BUFF_SEQUENCE] = 0;
  cc:	f240 0300 	movw	r3, #0	; 0x0
  d0:	f2c0 0300 	movt	r3, #0	; 0x0
  d4:	f04f 0200 	mov.w	r2, #0	; 0x0
  d8:	711a      	strb	r2, [r3, #4]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:701

				can_buffer_state = BUFFER_READY_TO_SEND;
  da:	f240 0300 	movw	r3, #0	; 0x0
  de:	f2c0 0300 	movt	r3, #0	; 0x0
  e2:	f102 0205 	add.w	r2, r2, #5	; 0x5
  e6:	701a      	strb	r2, [r3, #0]
  e8:	e02a      	b.n	140 <check_can+0x140>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:704
			}
			else
				can_buffer_state = BUFFER_IDLE;
  ea:	f240 0300 	movw	r3, #0	; 0x0
  ee:	f2c0 0300 	movt	r3, #0	; 0x0
  f2:	f04f 0200 	mov.w	r2, #0	; 0x0
  f6:	701a      	strb	r2, [r3, #0]
  f8:	e022      	b.n	140 <check_can+0x140>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:712

		case BUFFER_READY_TO_SEND:

			// Send the message in canMsgBuffer[]
			// This will change the buffer state if successful
			transmit_msg_buffer();
  fa:	f7ff fffe 	bl	0 <transmit_msg_buffer>
  fe:	e01f      	b.n	42 <check_can+0x42>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:719
			break;
			
		case BUFFER_TRANSMITTING:

			// Send another packet of a multiple packet message	
			if (packets_to_transmit)
 100:	f240 0300 	movw	r3, #0	; 0x0
 104:	f2c0 0300 	movt	r3, #0	; 0x0
 108:	79db      	ldrb	r3, [r3, #7]
 10a:	b1cb      	cbz	r3, 140 <check_can+0x140>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:722
			{
				// Reset the communication watchdog timer
				can_comm_watchdog = 0;
 10c:	f240 0300 	movw	r3, #0	; 0x0
 110:	f2c0 0300 	movt	r3, #0	; 0x0
 114:	f04f 0200 	mov.w	r2, #0	; 0x0
 118:	701a      	strb	r2, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:724

				if ( continue_mp_output() )
 11a:	f7ff fffe 	bl	0 <continue_mp_output>
 11e:	b178      	cbz	r0, 22 <canMsgBuffer+0x22>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:729
				{
					// A packet transmission was successful

					// Increment the sequence number to the next packet to send
					canMsgBuffer[BUFF_SEQUENCE]++;
 120:	f240 0200 	movw	r2, #0	; 0x0
 124:	f2c0 0200 	movt	r2, #0	; 0x0
 128:	7913      	ldrb	r3, [r2, #4]
 12a:	f103 0301 	add.w	r3, r3, #1	; 0x1
 12e:	7113      	strb	r3, [r2, #4]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:732

					// Decrement the number of packets left to send
					packets_to_transmit--;
 130:	f240 0200 	movw	r2, #0	; 0x0
 134:	f2c0 0200 	movt	r2, #0	; 0x0
 138:	79d3      	ldrb	r3, [r2, #7]
 13a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 13e:	71d3      	strb	r3, [r2, #7]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:740
			break;
			
		default:
			break;		 
	}
 140:	bd10      	pop	{r4, pc}
 142:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.initialize_can:

00000000 <initialize_can>:
initialize_can():
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:59
// State counter to access remote screens
remote_access_def remote_access_state = ACCESS_IDLE;


void initialize_can(void)
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:71
	// Make sure CAN is not in sleep mode
	// Leave CAN frozen in DEBUG mode, no reset, disable time triggered communication,
	//  automatic bus-off management, no automatic wakeup, continuous retry attempts,
	//  receive FIFO not locked (loses oldest on overrun), priority driven by message ID,
	//  no sleep request, request initialization mode
	CAN1->MCR = 0x00010041;
   2:	f246 4300 	movw	r3, #25600	; 0x6400
   6:	f2c4 0300 	movt	r3, #16384	; 0x4000
   a:	f240 0241 	movw	r2, #65	; 0x41
   e:	f2c0 0201 	movt	r2, #1	; 0x1
  12:	601a      	str	r2, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:75

	// Wait for initialization acknowledge
	poll_timer = 0;
	while ( (CAN1->MSR & 1) == 0 )
  14:	685b      	ldr	r3, [r3, #4]
  16:	f013 0f01 	tst.w	r3, #1	; 0x1
  1a:	bf01      	itttt	eq
  1c:	2200      	moveq	r2, #0
  1e:	f246 4300 	movweq	r3, #25600	; 0x6400
  22:	4618      	moveq	r0, r3
  24:	f2c4 0000 	movteq	r0, #16384	; 0x4000
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:77
	{
		if (poll_timer < 0xFFFF)
  28:	bf08      	it	eq
  2a:	f64f 71ff 	movweq	r1, #65535	; 0xffff
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:75
	//  no sleep request, request initialization mode
	CAN1->MCR = 0x00010041;

	// Wait for initialization acknowledge
	poll_timer = 0;
	while ( (CAN1->MSR & 1) == 0 )
  2e:	d005      	beq.n	3c <initialize_can+0x3c>
  30:	e010      	b.n	54 <initialize_can+0x54>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:78
	{
		if (poll_timer < 0xFFFF)
			poll_timer++;
  32:	f102 0301 	add.w	r3, r2, #1	; 0x1
  36:	b29a      	uxth	r2, r3
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:77

	// Wait for initialization acknowledge
	poll_timer = 0;
	while ( (CAN1->MSR & 1) == 0 )
	{
		if (poll_timer < 0xFFFF)
  38:	428a      	cmp	r2, r1
  3a:	d004      	beq.n	46 <initialize_can+0x46>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:75
	//  no sleep request, request initialization mode
	CAN1->MCR = 0x00010041;

	// Wait for initialization acknowledge
	poll_timer = 0;
	while ( (CAN1->MSR & 1) == 0 )
  3c:	6843      	ldr	r3, [r0, #4]
  3e:	f013 0f01 	tst.w	r3, #1	; 0x1
  42:	d0f6      	beq.n	32 <initialize_can+0x32>
  44:	e006      	b.n	54 <initialize_can+0x54>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:81
	{
		if (poll_timer < 0xFFFF)
			poll_timer++;
		else
		{
			send_a_string("\n\rCAN init error!");
  46:	f240 0000 	movw	r0, #0	; 0x0
  4a:	f2c0 0000 	movt	r0, #0	; 0x0
  4e:	f7ff fffe 	bl	0 <send_a_string>
  52:	e0b6      	b.n	1c2 <initialize_can+0x1c2>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:91
    // Set the Bit Timing register for 250k Baud
	// PCLK1 = 32MHz so prescaler = 8 gives 4MHz CAN clock: Tq = 0.25us
	//  250k Baud is 4us/bit = 16 Tq 
	// Not Silent mode, disable Loop Back mode
	// SJW = 1, T2 = 4, T1 = 11, Prescaler = 8
	CAN1->BTR = 0x003A0007;
  54:	f246 4200 	movw	r2, #25600	; 0x6400
  58:	f2c4 0200 	movt	r2, #16384	; 0x4000
  5c:	f240 0307 	movw	r3, #7	; 0x7
  60:	f2c0 033a 	movt	r3, #58	; 0x3a
  64:	61d3      	str	r3, [r2, #28]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:94

    // Leave initialization mode
	CAN1->MCR &= ~1;
  66:	6813      	ldr	r3, [r2, #0]
  68:	f023 0301 	bic.w	r3, r3, #1	; 0x1
  6c:	6013      	str	r3, [r2, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:98

	// Wait for the acknowledge
	poll_timer = 0;
	while (CAN1->MSR & 1)
  6e:	6853      	ldr	r3, [r2, #4]
  70:	f013 0f01 	tst.w	r3, #1	; 0x1
  74:	bf1f      	itttt	ne
  76:	2200      	movne	r2, #0
  78:	f246 4300 	movwne	r3, #25600	; 0x6400
  7c:	4618      	movne	r0, r3
  7e:	f2c4 0000 	movtne	r0, #16384	; 0x4000
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:100
	{
		if (poll_timer < 0xFFFF)
  82:	bf18      	it	ne
  84:	f64f 71ff 	movwne	r1, #65535	; 0xffff
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:98
    // Leave initialization mode
	CAN1->MCR &= ~1;

	// Wait for the acknowledge
	poll_timer = 0;
	while (CAN1->MSR & 1)
  88:	d105      	bne.n	96 <initialize_can+0x96>
  8a:	e010      	b.n	ae <initialize_can+0xae>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:101
	{
		if (poll_timer < 0xFFFF)
			poll_timer++;
  8c:	f102 0301 	add.w	r3, r2, #1	; 0x1
  90:	b29a      	uxth	r2, r3
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:100

	// Wait for the acknowledge
	poll_timer = 0;
	while (CAN1->MSR & 1)
	{
		if (poll_timer < 0xFFFF)
  92:	428a      	cmp	r2, r1
  94:	d004      	beq.n	a0 <initialize_can+0xa0>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:98
    // Leave initialization mode
	CAN1->MCR &= ~1;

	// Wait for the acknowledge
	poll_timer = 0;
	while (CAN1->MSR & 1)
  96:	6843      	ldr	r3, [r0, #4]
  98:	f013 0f01 	tst.w	r3, #1	; 0x1
  9c:	d1f6      	bne.n	8c <initialize_can+0x8c>
  9e:	e006      	b.n	ae <initialize_can+0xae>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:104
	{
		if (poll_timer < 0xFFFF)
			poll_timer++;
		else
		{
			send_a_string("\n\rCAN init mode error!");
  a0:	f240 0000 	movw	r0, #0	; 0x0
  a4:	f2c0 0000 	movt	r0, #0	; 0x0
  a8:	f7ff fffe 	bl	0 <send_a_string>
  ac:	e089      	b.n	1c2 <initialize_can+0x1c2>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:114
	/*---------------------------
	 * Initialize the CAN filters
	 *--------------------------*/

	// Set filter initialization mode
	CAN1->FMR |= 1;
  ae:	f246 4200 	movw	r2, #25600	; 0x6400
  b2:	f2c4 0200 	movt	r2, #16384	; 0x4000
  b6:	f8d2 3200 	ldr.w	r3, [r2, #512]
  ba:	f043 0301 	orr.w	r3, r3, #1	; 0x1
  be:	f8c2 3200 	str.w	r3, [r2, #512]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:117

	// Make sure all filters are deactivated
	CAN1->FA1R = 0;
  c2:	f04f 0500 	mov.w	r5, #0	; 0x0
  c6:	f8c2 521c 	str.w	r5, [r2, #540]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:121

	// Set all filters for single 32-bit scale configuration
	// This high density device only has 14 32bit filters
	CAN1->FS1R = 0x3FFF;
  ca:	f643 73ff 	movw	r3, #16383	; 0x3fff
  ce:	f8c2 320c 	str.w	r3, [r2, #524]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:126

    // Set all filter banks for Identifier Mask mode
	// If any become Identifier List mode, they take lower indexes 
	//  which would shift existing indexes
    CAN1->FM1R = 0;
  d2:	f8c2 5204 	str.w	r5, [r2, #516]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:143
	 * Filter 6 connected to FIFO 0 receives PGN 0xFEDF (EEC3 messages)
	 *---------------------------------------------------------------*/

	// Assign filters 0, 2, 3, 6, 8, 10 and 12 to FIFO 0
	// Assign filters 1, 4, 5, 7, 9, 11 and 13 to FIFO 1
	CAN1->FFA1R = 0x00002AB2;		// .. 0010 1010 1011 0010
  d6:	f642 23b2 	movw	r3, #10930	; 0x2ab2
  da:	f8c2 3214 	str.w	r3, [r2, #532]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:156
	 * All filter Mask registers require them to match and do not require
	 *  Priority, Reserved bit or Source Address to match
	 *-----------------------------------------------------------------------*/

	// Filter Bank 0 is Index 0 from FIFO 0
	CAN1->sFilterRegister[0].FR1 = 0x04 | PF_PDU << 19 | 0xE0 << 11;
  de:	f240 0304 	movw	r3, #4	; 0x4
  e2:	f2c0 73f7 	movt	r3, #2039	; 0x7f7
  e6:	f8c2 3240 	str.w	r3, [r2, #576]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:158
	// Match PF and upper nybble of PS
    CAN1->sFilterRegister[0].FR2 = 0x08000006 | 0xFF << 19 | 0xF0 << 11;
  ea:	f248 0106 	movw	r1, #32774	; 0x8006
  ee:	f6c0 71ff 	movt	r1, #4095	; 0xfff
  f2:	f8c2 1244 	str.w	r1, [r2, #580]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:161

	// Filter Bank 1 is Index 0 from FIFO 1
	CAN1->sFilterRegister[1].FR1 = 0x04 | PF_PDU << 19 | 0xF0 << 11;
  f6:	f248 0304 	movw	r3, #32772	; 0x8004
  fa:	f2c0 73f7 	movt	r3, #2039	; 0x7f7
  fe:	f8c2 3248 	str.w	r3, [r2, #584]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:163
	// Match PF and upper nybble of PS
    CAN1->sFilterRegister[1].FR2 = 0x08000006 | 0xFF << 19 | 0xF0 << 11;
 102:	f8c2 124c 	str.w	r1, [r2, #588]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:166

	// Filter Bank 2 is Index 1 from FIFO 0
	CAN1->sFilterRegister[2].FR1 = 0x04 | PF_EEC << 19 | 0x00 << 11;
 106:	f240 0304 	movw	r3, #4	; 0x4
 10a:	f2c0 7380 	movt	r3, #1920	; 0x780
 10e:	f8c2 3250 	str.w	r3, [r2, #592]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:168
	// Match PF and upper 5 bits of PS
	CAN1->sFilterRegister[2].FR2 = 0x08000006 | 0xFF << 19 | 0xF8 << 11;
 112:	f24c 0306 	movw	r3, #49158	; 0xc006
 116:	f6c0 73ff 	movt	r3, #4095	; 0xfff
 11a:	f8c2 3254 	str.w	r3, [r2, #596]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:171

	// Filter Bank 3 is Index 2 from FIFO 0
	CAN1->sFilterRegister[3].FR1 = 0x04 | PF_PDU << 19 | PS_DM1 << 11;
 11e:	f245 0304 	movw	r3, #20484	; 0x5004
 122:	f2c0 73f6 	movt	r3, #2038	; 0x7f6
 126:	f8c2 3258 	str.w	r3, [r2, #600]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:173
	// Match entire PDU
    CAN1->sFilterRegister[3].FR2 = 0x08000006 | 0xFF << 19 | 0xFF << 11;
 12a:	f64f 0406 	movw	r4, #63494	; 0xf806
 12e:	f6c0 74ff 	movt	r4, #4095	; 0xfff
 132:	f8c2 425c 	str.w	r4, [r2, #604]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:176

	// Filter Bank 4 is Index 1 from FIFO 1
	CAN1->sFilterRegister[4].FR1 = 0x04 | 0xE8 << 19 | CAN_ALL_ADDR << 11;
 136:	f64f 0304 	movw	r3, #63492	; 0xf804
 13a:	f2c0 7347 	movt	r3, #1863	; 0x747
 13e:	f8c2 3260 	str.w	r3, [r2, #608]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:178
	// Match upper 5 bits of PF and all of destination address
    CAN1->sFilterRegister[4].FR2 = 0x08000006 | 0xF8 << 19 | 0xFF << 11;
 142:	f64f 0106 	movw	r1, #63494	; 0xf806
 146:	f6c0 71c7 	movt	r1, #4039	; 0xfc7
 14a:	f8c2 1264 	str.w	r1, [r2, #612]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:181

	// Filter Bank 5 is Index 2 from FIFO 1
	CAN1->sFilterRegister[5].FR1 = 0x04 | 0xE8 << 19 | this_can_address << 11;
 14e:	f240 0300 	movw	r3, #0	; 0x0
 152:	f2c0 0300 	movt	r3, #0	; 0x0
 156:	7818      	ldrb	r0, [r3, #0]
 158:	f240 0304 	movw	r3, #4	; 0x4
 15c:	f2c0 7340 	movt	r3, #1856	; 0x740
 160:	ea43 23c0 	orr.w	r3, r3, r0, lsl #11
 164:	f8c2 3268 	str.w	r3, [r2, #616]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:183
	// Match upper 5 bits of PF and all of destination address
    CAN1->sFilterRegister[5].FR2 = 0x08000006 | 0xF8 << 19 | 0xFF << 11;
 168:	f8c2 126c 	str.w	r1, [r2, #620]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:186

	// Filter Bank 6 is Index 3 from FIFO 0
	CAN1->sFilterRegister[6].FR1 = 0x04 | PF_PDU << 19 | PS_EEC3 << 11;
 16c:	f64f 0304 	movw	r3, #63492	; 0xf804
 170:	f2c0 73f6 	movt	r3, #2038	; 0x7f6
 174:	f8c2 3270 	str.w	r3, [r2, #624]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:188
	// Match entire PDU
    CAN1->sFilterRegister[6].FR2 = 0x08000006 | 0xFF << 19 | 0xFF << 11;
 178:	f8c2 4274 	str.w	r4, [r2, #628]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:192

	// Activate filters 0 - 6
	// Leave the others deactivated
	CAN1->FA1R = 0x0000007F;
 17c:	f04f 037f 	mov.w	r3, #127	; 0x7f
 180:	f8c2 321c 	str.w	r3, [r2, #540]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:195

	// Leave filter initialization mode
	CAN1->FMR &= ~1;
 184:	f8d2 3200 	ldr.w	r3, [r2, #512]
 188:	f023 0301 	bic.w	r3, r3, #1	; 0x1
 18c:	f8c2 3200 	str.w	r3, [r2, #512]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:198

	// Enable CAN FIFO 0 and FIFO 1 message pending interrupts
	CAN1->IER = 0x0012;
 190:	f04f 0312 	mov.w	r3, #18	; 0x12
 194:	6153      	str	r3, [r2, #20]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:201

	// Configure the NVIC CAN1 FIFO0 receive interrupt
	enable_interrupt(USB_LP_CAN1_RX0_IRQn, 1);
 196:	f04f 0014 	mov.w	r0, #20	; 0x14
 19a:	f04f 0101 	mov.w	r1, #1	; 0x1
 19e:	f7ff fffe 	bl	0 <enable_interrupt>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:204

	// Configure the NVIC CAN1 FIFO1 receive interrupt
	enable_interrupt(CAN1_RX1_IRQn, 1);
 1a2:	f04f 0015 	mov.w	r0, #21	; 0x15
 1a6:	f04f 0101 	mov.w	r1, #1	; 0x1
 1aa:	f7ff fffe 	bl	0 <enable_interrupt>
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:206

	can_buffer_state = BUFFER_IDLE;
 1ae:	f240 0300 	movw	r3, #0	; 0x0
 1b2:	f2c0 0300 	movt	r3, #0	; 0x0
 1b6:	701d      	strb	r5, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:209

	// Initialize the communication watchdog timer
	can_comm_watchdog = 0;
 1b8:	f240 0300 	movw	r3, #0	; 0x0
 1bc:	f2c0 0300 	movt	r3, #0	; 0x0
 1c0:	701d      	strb	r5, [r3, #0]
C:\Documents and Settings\All Users\Desktop\CWork\Cortex\Projects\CortexAutoStart/Canbus.c:210
}
 1c2:	bd70      	pop	{r4, r5, r6, pc}
